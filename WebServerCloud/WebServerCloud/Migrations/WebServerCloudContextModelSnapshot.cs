// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebServerCloud.Data;

namespace WebServerCloud.Migrations
{
    [DbContext(typeof(WebServerCloudContext))]
    partial class WebServerCloudContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebServerCloud.Models.Anagrafica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CAP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellulare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Citta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indirizzo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RagioneSociale")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("anagrafiche");
                });

            modelBuilder.Entity("WebServerCloud.Models.DatiProtesi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Oticon")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Ventilazione")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.ToTable("datiProtesi");

                    b.HasCheckConstraint("CK_DATI_OTICON", "Oticon in ('D','S','E')");

                    b.HasCheckConstraint("CK_DATI_Ventilazione", "Ventilazione in ('D','S','E')");
                });

            modelBuilder.Entity("WebServerCloud.Models.Ordine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AudioProtesistaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCaricamento")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SpedizioneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UtenteProtesiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Video")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("AudioProtesistaId");

                    b.HasIndex("SpedizioneId");

                    b.HasIndex("UtenteProtesiId");

                    b.ToTable("ordini");
                });

            modelBuilder.Entity("WebServerCloud.Models.UtenteProtesi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cedevole")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("DataNascita")
                        .HasColumnType("datetime2");

                    b.Property<string>("Iniziali")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Molle")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Normale")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PrimoPortatore")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("utentiProtesi");

                    b.HasCheckConstraint("CK_Utente_Molle", "Molle in ('D','S','E')");

                    b.HasCheckConstraint("CK_Utente_Cedevole", "Cedevole in ('D','S','E')");

                    b.HasCheckConstraint("CK_Utente_Normale", "Normale in ('D','S','E')");
                });

            modelBuilder.Entity("WebServerCloud.Models.Ordine", b =>
                {
                    b.HasOne("WebServerCloud.Models.Anagrafica", "AudioProtesista")
                        .WithMany()
                        .HasForeignKey("AudioProtesistaId");

                    b.HasOne("WebServerCloud.Models.Anagrafica", "Spedizione")
                        .WithMany()
                        .HasForeignKey("SpedizioneId");

                    b.HasOne("WebServerCloud.Models.UtenteProtesi", "UtenteProtesi")
                        .WithMany()
                        .HasForeignKey("UtenteProtesiId");
                });
#pragma warning restore 612, 618
        }
    }
}
